{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","setTodos","todos","setStatus","onChange","e","console","log","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.528f1145.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Form({ inputText, setInputText, setTodos, todos, setStatus }) {\n  //here will come logic\n\n  const inputTextHandler = (e) => {\n    console.log(e.target.value);\n    setInputText(e.target.value);\n  };\n\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      { text: inputText, completed: false, id: Math.random() * 1000 },\n    ]);\n    setInputText(\"\");\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value);\n  };\n\n  return (\n    <form>\n      <input\n        onChange={inputTextHandler}\n        value={inputText}\n        type=\"text\"\n        className=\"todo-input\"\n      />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} className=\"filter-todo\" name=\"todos\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"Uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nfunction Todo({ text, todo, todos, setTodos }) {\n  //event handler\n\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id));\n    // console.log(\"click\");\n  };\n\n  const completeHandler = () => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\n        {text}\n      </li>\n      <button onClick={completeHandler} className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\n// import component\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n  // console.log(todos);\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => (\n          <Todo\n            key={todo.id}\n            text={todo.text}\n            todos={todos}\n            setTodos={setTodos}\n            todo={todo}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\n//importing components\nimport Form from \"./Components/Form\";\nimport TodoList from \"./Components/TodoList\";\n\nfunction App() {\n  //state stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  // functions\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Jaskaran's TODO List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        setInputText={setInputText}\n        setTodos={setTodos}\n        todos={todos}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}